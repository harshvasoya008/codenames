{"version":3,"sources":["realtimeService.js","components/Card.js","components/Board.js","components/PubSub.js","components/Game.js","constants/events.js","constants/words.js","components/App.js","serviceWorker.js","index.js"],"names":["window","Ably","Realtime","Card","props","cssClass","data","isChosen","isSpyMaster","type","className","onClick","word","Board","createBoard","bind","row","col","board","cellCounter","i","columns","j","push","this","renderCard","key","cards","Component","PubSub","publish","channelName","channel","channels","get","subscribe","handlePublishError","err","console","log","message","Game","newBoard","categorizeWords","words","gameChannel","redCount","Math","floor","random","length","card","_","shuffle","blueCount","turn","state","teamRed","teamBlue","isGameOver","myTeam","playerMap","myUuid","team","winner","prepareTeams","subscribeToChannel","isRoomCreator","filter","Object","keys","uuid","setState","msg","eventType","msgData","index","blackCardClicked","checkForWinner","currTurn","nextTurn","declareWinner","map","player","name","join","disabled","endTurn","handleCardClick","wordList","App","count","prevState","players","concat","playerList","teams","isPlaying","onPressCreate","roomId","lobbyChannel","APP_NAME","isDisabled","slice","alert","onPressJoin","onPressStartGame","teamFlag","forEach","p","shortid","generate","substring","handleInputChange","e","target","value","style","onChange","leftPlayer","rightPlayer","Boolean","location","hostname","match","require","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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,MACA,QACA,OACA,cACA,OACA,WACA,QACA,MACA,WACA,OACA,OACA,UACA,SACA,OACA,WACA,OACA,MACA,WACA,OACA,WACA,aACA,aACA,OACA,MACA,OACA,UACA,SACA,aACA,MACA,QACA,OACA,OACA,YACA,OACA,QACA,OACA,MACA,SACA,MACA,OACA,YACA,UACA,OACA,OACA,QACA,SACA,UACA,QACA,MACA,UACA,MACA,WACA,UACA,OACA,OACA,YACA,OACA,WACA,UACA,OACA,aACA,QACA,UACA,SACA,QACA,QACA,WACA,QACA,UACA,YACA,QACA,QACA,OACA,MACA,QACA,OACA,MACA,UACA,OACA,OACA,OACA,OACA,OACA,SACA,SACA,OACA,OACA,OACA,QACA,OACA,SACA,MACA,OACA,SACA,SACA,MACA,QACA,MACA,QACA,aACA,QACA,QACA,QACA,SACA,QACA,QACA,QACA,QACA,SACA,WACA,SACA,QACA,UACA,SACA,WACA,QACA,SACA,OACA,SACA,QACA,UACA,MACA,QACA,OACA,OACA,QACA,MACA,SACA,YACA,SACA,MACA,QACA,QACA,SACA,YACA,OACA,aACA,OACA,OACA,WACA,MACA,SACA,SACA,QACA,OACA,MACA,OACA,UACA,aACA,UACA,MACA,OACA,YACA,SACA,cACA,SACA,OACA,SACA,MACA,OACA,KACA,UACA,OACA,UACA,SACA,UACA,QACA,QACA,QACA,WACA,SACA,SACA,UACA,QACA,cACA,SACA,OACA,SACA,QACA,QACA,OACA,QACA,UACA,QACA,QACA,OACA,YACA,YACA,SACA,SACA,SACA,OACA,YACA,QACA,QACA,QACA,YACA,QACA,QACA,OACA,OACA,QACA,OACA,QACA,UACA,OACA,SACA,MACA,OACA,SACA,UACA,WACA,OACA,QACA,UACA,QACA,WACA,WACA,UACA,YACA,OACA,cACA,YACA,WACA,eACA,OACA,OACA,SACA,OACA,WACA,MACA,SACA,QACA,UACA,QACA,QACA,MACA,SACA,OACA,QACA,QACA,QACA,SACA,QACA,UACA,QACA,YACA,QACA,OACA,QACA,SACA,QACA,WACA,QACA,UACA,SACA,OACA,QACA,UACA,UACA,QACA,OACA,QACA,MACA,QACA,OACA,OACA,OACA,OACA,MACA,QACA,OACA,OACA,SACA,SACA,QACA,OACA,UACA,OACA,UACA,OACA,aACA,SACA,WACA,WACA,QACA,UACA,OACA,YACA,QACA,QACA,SACA,MACA,WACA,OACA,SACA,WACA,OACA,MACA,QACA,SACA,QACA,OACA,UACA,QACA,QACA,WACA,QACA,QACA,OACA,SACA,QACA,OACA,OACA,QACA,QACA,OACA,OACA,OACA,OACA,QACA,QACA,MACA,QACA,aACA,SACA,MACA,QACA,OACA,MACA,QACA,WACA,QACA,cACA,WACA,WACA,MACA,MACA,UACA,SACA,UACA,YACA,YACA,SACA,SACA,YACA,YACA,MACA,UACA,OACA,OACA,OACA,MACA,QACA,OACA,OACA,QACA,QACA,YACA,QACA,SACA,QACA,UACA,UACA,SACA,OACA,OACA,SACA,OACA,QACA,OACA,UACA,MACA,OACA,OACA,WACA,UACA,aACA,OACA,QACA,QACA,QACA,UACA,SACA,MACA,QACA,QACA,UACA,MACA,OACA,MACA,OACA,OACA,WACA,QACA,WACA,SACA,UACA,OACA,YACA,SACA,UACA,UACA,SACA,OACA,QACA,QACA,OACA,SACA,OACA,WACA,UACA,SACA,MACA,WACA,OACA,MACA,QACA,SACA,UACA,QACA,QACA,SACA,cACA,OACA,UACA,QACA,UACA,QACA,OACA,SACA,OACA,aACA,OACA,UACA,WACA,QACA,UACA,QACA,QACA,YACA,OACA,SACA,QACA,aACA,QACA,SACA,SACA,MACA,UACA,UACA,OACA,OACA,YACA,MACA,YACA,SACA,OACA,SACA,cACA,OACA,QACA,MACA,QACA,SACA,OACA,OACA,WACA,QACA,QACA,aACA,SACA,MACA,WACA,OACA,OACA,YACA,MACA,SACA,OACA,YACA,QACA,WACA,QACA,OACA,OACA,OACA,YACA,OACA,QACA,YACA,OACA,WACA,MACA,QACA,QACA,YACA,MACA,aACA,SACA,SACA,OACA,MACA,MACA,UACA,YACA,UACA,QACA,UACA,QACA,MACA,MACA,cACA,SACA,WACA,aACA,OACA,SACA,QACA,MACA,OACA,OACA,OACA,MACA,QACA,QACA,QACA,YACA,MACA,UACA,MACA,cACA,SACA,MACA,QACA,UACA,QACA,OACA,SACA,UACA,WACA,UACA,MACA,OACA,MACA,SACA,WACA,OACA,OACA,cACA,OACA,UACA,OACA,OACA,OACA,QACA,QACA,SACA,OACA,QACA,UACA,MACA,OACA,SACA,UACA,MACA,WACA,MACA,QACA,QACA,UACA,MACA,OACA,YACA,SACA,OACA,OACA,OACA,UACA,MACA,QACA,WACA,aACA,SACA,QACA,OACA,YACA,WACA,QACA,YACA,aACA,OACA,YACA,OACA,OACA,OACA,MACA,SACA,SACA,YACA,OACA,SACA,MACA,WACA,WACA,SACA,OACA,WACA,UACA,OACA,aACA,QACA,WACA,SACA,UACA,QACA,WACA,WACA,OACA,UACA,SACA,UACA,WACA,MACA,QACA,UACA,WACA,SACA,QACA,OACA,OACA,SACA,OACA,OACA,QACA,aACA,OACA,WACA,QACA,SACA,UACA,OACA,QACA,SACA,aACA,YACA,YACA,OACA,OACA,OACA,cACA,OACA,WACA,OACA,SACA,SACA,OACA,UACA,UACA,QACA,SACA,SACA,OACA,OACA,MACA,YACA,SACA,QACA,UACA,SACA,UACA,QACA,OACA,MACA,SACA,QACA,WACA,OACA,SACA,aACA,QACA,WACA,UACA,QACA,QACA,QACA,MACA,MACA,QACA,QACA,YACA,UACA,OACA,OACA,WACA,SACA,SACA,YACA,WACA,QACA,OACA,MACA,UACA,WACA,SACA,QACA,QACA,YACA,QACA,OACA,OACA,OACA,aACA,QACA,QACA,MACA,QACA,MACA,QACA,cACA,UACA,SACA,MACA,MACA,QACA,WACA,UACA,QACA,SACA,SACA,QACA,SACA,QACA,QACA,WACA,QACA,UACA,UACA,WACA,UACA,MACA,SACA,OACA,OACA,QACA,UACA,SACA,OACA,MACA,QACA,QACA,YACA,SACA,OACA,SACA,SACA,OACA,QACA,OACA,WACA,QACA,SACA,UACA,OACA,MACA,QACA,SACA,OACA,QACA,MACA,SACA,WACA,UACA,QACA,WACA,SACA,WACA,MACA,cACA,UACA,QACA,aACA,QACA,SACA,MACA,MACA,SACA,SACA,QACA,MACA,QACA,OACA,OACA,WACA,OACA,SACA,SACA,MACA,QACA,UACA,QACA,QACA,OACA,QACA,QACA,UACA,QACA,WACA,OACA,aACA,OACA,OACA,UACA,SACA,OACA,QACA,SACA,OACA,SACA,SACA,OACA,OACA,OACA,OACA,MACA,UACA,WACA,aACA,OACA,YACA,WACA,OACA,SACA,SACA,QACA,SACA,QACA,WACA,gBACA,aACA,eACA,YACA,UACA,OACA,QACA,SACA,QACA,QACA,OACA,SACA,UACA,QACA,aACA,UACA,QACA,YACA,QACA,SACA,OACA,SACA,QACA,OACA,MACA,OACA,UACA,YACA,MACA,QACA,SACA,MACA,MACA,QACA,SACA,UACA,MACA,SACA,gBACA,WACA,YACA,aACA,MACA,OACA,SACA,QACA,MACA,OACA,OACA,MACA,QACA,OACA,QACA,QACA,OACA,QACA,OACA,SACA,OACA,OACA,OACA,OACA,OACA,WACA,QACA,aACA,MACA,SACA,QACA,OACA,OACA,SACA,OACA,MACA,OACA,MACA,SACA,OACA,SACA,OACA,QACA,SACA,SACA,QACA,OACA,OACA,UACA,aACA,WACA,QACA,OACA,YACA,SACA,MACA,QACA,OACA,YACA,SACA,SACA,YACA,WACA,YACA,WACA,UACA,SACA,SACA,cACA,QACA,OACA,WACA,SACA,SACA,WACA,UACA,SACA,MACA,SACA,QACA,cACA,UACA,UACA,QACA,OACA,QACA,QACA,SACA,QACA,UACA,WACA,WACA,OACA,YACA,QACA,OACA,WACA,QACA,OACA,QACA,SACA,OACA,WACA,SACA,SACA,OACA,SACA,OACA,aACA,OACA,SACA,OACA,MACA,SACA,QACA,SACA,UACA,MACA,QACA,aACA,OACA,OACA,QACA,QACA,OACA,UACA,QACA,OACA,OACA,QACA,QACA,QACA,QACA,WACA,WACA,QACA,OACA,SACA,OACA,UACA,UACA,OACA,OACA,UACA,OACA,OACA,QACA,OACA,QACA,QACA,WACA,QACA,SACA,SACA,QACA,QACA,SACA,OACA,SACA,QACA,QACA,OACA,QACA,SACA,YACA,QACA,MACA,SACA,SACA,SACA,WACA,aACA,SACA,UACA,QACA,SACA,QACA,WACA,OACA,QACA,QACA,QACA,OACA,cACA,QACA,UACA,QACA,cACA,YACA,QACA,QACA,QACA,QACA,WACA,QACA,SACA,aACA,SACA,SACA,SACA,SACA,UACA,MACA,QACA,OACA,OACA,MACA,UACA,YACA,QACA,QACA,QACA,QACA,UACA,WACA,QACA,SACA,QACA,QACA,SACA,aACA,MACA,OACA,OACA,OACA,MACA,QACA,SACA,OACA,MACA,UACA,OACA,SACA,OACA,WACA,YACA,YACA,aACA,SACA,MACA,SACA,QACA,UACA,QACA,QACA,SACA,UACA,QACA,UACA,OACA,OACA,MACA,QACA,OACA,MACA,UACA,MACA,OACA,SACA,SACA,QACA,SACA,QACA,SACA,QACA,OACA,QACA,aACA,QACA,UACA,aACA,QACA,QACA,UACA,QACA,QACA,WACA,OACA,WACA,QACA,OACA,QACA,QACA,QACA,MACA,OACA,OACA,SACA,SACA,SACA,QACA,OACA,SACA,QACA,OACA,eACA,OACA,aACA,aACA,UACA,aACA,UACA,SACA,YACA,UACA,MACA,QACA,OACA,MACA,SACA,SACA,QACA,SACA,UACA,SACA,MACA,QACA,WACA,OACA,OACA,SACA,MACA,SACA,aA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","file":"static/js/main.005248b2.chunk.js","sourcesContent":["import { Realtime } from 'ably/browser/static/ably-commonjs.js';\n\nwindow.Ably = new Realtime('3tgmIg.8CP_lQ:ozjSCWBHfR578D7j'); // ADD YOUR API KEY HERE ","import React from 'react';\nimport '../styles/Card.css';\n\nconst RED_AGENT = \"RED_AGENT\";\nconst BLUE_AGENT = \"BLUE_AGENT\";\nconst TAN_BYSTANDER = \"TAN_BYSTANDER\";\nconst BLACK_ASSASSIN = \"BLACK_ASSASSIN\";\n\nconst Card = props => {\n    let cssClass = \"word-card\";\n    if (props.data.isChosen || props.isSpyMaster) {\n        switch(props.data.type) {\n            case RED_AGENT:\n                cssClass += \" red-card\";\n                break;\n            case BLUE_AGENT:\n                cssClass += \" blue-card\";\n                break;\n            case TAN_BYSTANDER:\n                cssClass += \" tan-card\";\n                break;\n            case BLACK_ASSASSIN:\n                cssClass += \" black-card\";\n                break;\n            default:\n                break;\n        }\n    }\n\n    return (\n        <button className={`${cssClass}`} onClick={props.onClick}>\n            {props.data.word}\n        </button>\n    );\n};\n\nexport default Card;","import React, { Component } from 'react';\nimport Card from './Card';\nimport '../styles/Board.css';\n\nclass Board extends Component {\n    constructor(props) {\n        super(props);\n        this.createBoard = this.createBoard.bind(this);\n    }\n\n    createBoard(row, col) {\n        const board = [];\n        let cellCounter = 0;\n\n        for (let i = 0; i < row; i += 1) {\n            const columns = [];\n            for (let j = 0; j < col; j += 1) {\n                columns.push(this.renderCard(cellCounter++));\n            }\n            board.push(<div key={i} className=\"board-row\">{columns}</div>);\n        }\n\n        return board;\n    }\n\n    renderCard(i) {\n        return (\n            <Card\n                key={i}\n                data={this.props.cards[i]}\n                isSpyMaster={this.props.isSpyMaster}\n                onClick={() => this.props.onClick(i)}\n            />\n        );\n    }\n\n    render() {\n        return <div className=\"board\">{this.createBoard(5, 5)}</div>;\n    }\n}\n\nexport default Board;\n","export class PubSub {\n\n    static publish = (channelName, ...args) => {\n        /*global Ably*/\n        const channel = Ably.channels.get(channelName);\n        channel.publish(args[0], args[1], args[2]);\n    }\n\n    static subscribe = (channelName, ...args) => {\n        const channel = Ably.channels.get(channelName);\n        channel.subscribe(args[0]);\n    }\n}\n\nexport const handlePublishError = (err) => {\n    if (err) {\n        console.log('Unable to publish message; err = ' + err.message);\n    }\n}\n","import React, { Component } from 'react';\nimport _ from 'lodash';\nimport Board from './Board';\nimport { PubSub, handlePublishError } from './PubSub';\nimport { EVENT_NEW_BOARD, EVENT_CARD_CLICK, EVENT_TURN_PASS } from '../constants/events';\n\nconst TOTAL_CARDS = 25;\nconst TEAM_RED = \"Red\";\nconst TEAM_BLUE = \"Blue\";\nconst RED_AGENT = \"RED_AGENT\";\nconst BLUE_AGENT = \"BLUE_AGENT\";\nconst TAN_BYSTANDER = \"TAN_BYSTANDER\";\nconst BLACK_ASSASSIN = \"BLACK_ASSASSIN\";\n\nclass Game extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            board: [],\n            teamRed: [],\n            teamBlue: [],\n            turn: 'Nobody',\n            isGameOver: false\n        }\n\n        this.myTeam = props.playerMap[props.myUuid].team;\n        this.redCount = 0;\n        this.blueCount = 0;\n        this.winner = null;\n    }\n\n    componentDidMount() {\n        this.prepareTeams();\n        this.subscribeToChannel();\n\n        if (this.props.isRoomCreator) {\n            this.createBoard();\n        }\n    }\n\n    prepareTeams() {\n        const teamRed = _.filter(Object.keys(this.props.playerMap), uuid => this.props.playerMap[uuid].team === TEAM_RED);\n        const teamBlue = _.filter(Object.keys(this.props.playerMap), uuid => this.props.playerMap[uuid].team === TEAM_BLUE);\n        this.setState({\n            teamRed: teamRed,\n            teamBlue: teamBlue,\n            isSpyMaster: (this.props.myUuid === teamRed[0] || this.props.myUuid === teamBlue[0])\n        })\n    }\n\n    subscribeToChannel() {\n        PubSub.subscribe(this.props.gameChannel, (msg) => {\n            const eventType = msg['name'];\n            const msgData = msg['data'];\n\n            if (eventType === EVENT_NEW_BOARD) {\n                this.redCount = msgData.board.redCount;\n                this.blueCount = msgData.board.blueCount;\n                this.setState({\n                    board: msgData.board.words,\n                    turn: msgData.board.turn\n                });\n            }\n\n            else if (eventType === EVENT_CARD_CLICK) {\n                this.redCount = msgData.redCount;\n                this.blueCount = msgData.blueCount;\n\n                let board = this.state.board;\n                if (board[msgData.index].type === BLACK_ASSASSIN) {\n                    this.blackCardClicked();\n                } else {\n                    board[msgData.index].isChosen = true;\n                    this.setState({ board: board, turn: msgData.turn });\n                    this.checkForWinner();\n                }\n            }\n\n            else if (eventType === EVENT_TURN_PASS) {\n                this.setState({ turn: msgData.turn });\n            }\n        });\n    }\n\n    createBoard = () => {\n        const newBoard = this.categorizeWords(this.props.words);\n\n        // Sending board to all players\n        PubSub.publish(\n            this.props.gameChannel,\n            EVENT_NEW_BOARD,\n            { board: newBoard },\n            handlePublishError\n        );\n    }\n\n    categorizeWords = (words) => {\n        const redCount = Math.floor(Math.random() + 0.5) === 0 ? 9 : 8;\n        let cards = [];\n        for (let i = 0; i < words.length; i += 1) {\n            let card = {\n                word: words[i]\n            }\n            if (i < redCount) {\n                card.type = RED_AGENT;\n            } else if (i < 17) {\n                card.type = BLUE_AGENT;\n            } else if (i < 24) {\n                card.type = TAN_BYSTANDER;\n            } else {\n                card.type = BLACK_ASSASSIN;\n            }\n            cards.push(card);\n        }\n\n        // Shuffling the array\n        return {\n            words: _.shuffle(cards),\n            redCount: redCount,\n            blueCount: 17 - redCount,\n            turn: redCount === 9 ? TEAM_RED : TEAM_BLUE\n        };\n    }\n\n    handleCardClick(index) {\n        let board = this.state.board;\n        const currTurn = this.state.turn;\n        if (!board[index].isChosen && currTurn === this.myTeam && !this.state.isSpyMaster) {\n            board[index].isChosen = true;\n            this.setState({ board: board });\n\n            let nextTurn = currTurn;\n            switch (board[index].type) {\n                case RED_AGENT:\n                    this.redCount -= 1;\n                    nextTurn = TEAM_RED;\n                    break;\n\n                case BLUE_AGENT:\n                    this.blueCount -= 1;\n                    nextTurn = TEAM_BLUE;\n                    break;\n\n                case TAN_BYSTANDER:\n                    nextTurn = currTurn === TEAM_RED ? TEAM_BLUE : TEAM_RED\n                    break;\n\n                case BLACK_ASSASSIN:\n                    nextTurn = \"Nobody\";\n                    this.blackCardClicked();\n                    break;\n\n                default:\n                    break;\n            }\n\n            this.setState({ turn: nextTurn });\n            PubSub.publish(\n                this.props.gameChannel,\n                EVENT_CARD_CLICK,\n                {\n                    index: index,\n                    turn: nextTurn,\n                    redCount: this.redCount,\n                    blueCount: this.blueCount\n                },\n                handlePublishError\n            );\n\n            // Check if there is a winner\n            this.checkForWinner();\n        }\n    }\n\n    blackCardClicked() {\n        const currTurn = this.state.turn;\n        if (currTurn === TEAM_RED) {\n            this.winner = TEAM_BLUE;\n        } else if (currTurn === TEAM_BLUE) {\n            this.winner = TEAM_RED;\n        }\n        this.declareWinner();\n    }\n\n    checkForWinner() {\n        if (this.redCount === 0) {\n            this.winner = TEAM_RED;\n            this.declareWinner();\n        } else if (this.blueCount === 0) {\n            this.winner = TEAM_BLUE;\n            this.declareWinner();\n        }\n    }\n\n    declareWinner() {\n        // Revealing color of all cards        \n        let board = this.state.board;\n        for (let index = 0; index < board.length; index++) {\n            board[index].isChosen = true;\n        }\n        this.setState({ board: board, isGameOver: true });\n    }\n\n    endTurn() {\n        const currTurn = this.state.turn;\n        const nextTurn = currTurn === TEAM_RED ? TEAM_BLUE : TEAM_RED;\n        this.setState({ turn: nextTurn });\n        PubSub.publish(\n            this.props.gameChannel,\n            EVENT_TURN_PASS,\n            { turn: nextTurn },\n            handlePublishError\n        );\n    }\n\n    render() {\n        return (\n            <div>\n                <div className=\"team-map\">\n                    <div>\n                        <span>Team Red: </span>\n                        <span>{this.state.teamRed.map(player => this.props.playerMap[player].name).join(',')}</span>\n                    </div>\n                    <div>\n                        <span>Team Blue: </span>\n                        <span>{this.state.teamBlue.map(player => this.props.playerMap[player].name).join(',')}</span>\n                    </div>\n                    <div>\n                        <div>Cards remaining (Red-Blue): {this.redCount}-{this.blueCount}</div>\n                        {\n                            !this.state.isGameOver\n                                ? <div>\n                                    {this.state.turn}'s turn\n                                    <button disabled={this.state.turn !== this.myTeam}\n                                        onClick={() => this.endTurn()}>\n                                        End Turn\n                                    </button>\n                                </div>\n                                : <div>{this.winner} won!</div>\n                        }\n                    </div>\n                </div>\n                {\n                    this.state.board.length === TOTAL_CARDS &&\n                    <div className=\"game\">\n                        <div>\n                            <Board\n                                cards={this.state.board}\n                                isSpyMaster={this.state.isSpyMaster}\n                                onClick={index => this.handleCardClick(index)}\n                            />\n                        </div>\n                    </div>\n                }\n            </div>\n        );\n    }\n}\n\nexport default Game;\n","export const EVENT_JOIN = 'event_join';\nexport const EVENT_PLAYER_LIST = 'event_player_list';\nexport const EVENT_START = 'event_start';\n\nexport const EVENT_NEW_BOARD = 'event_new_board';\nexport const EVENT_CARD_CLICK = 'event_card_click';\nexport const EVENT_TURN_PASS = 'event_turn_pass';","\nexport const wordList = [\n    'ACE',\n    'ACNE',\n    'ACRE',\n    'ADDENDUM',\n    'ADVERTISE',\n    'AFRICA',\n    'AGENT',\n    'AIR',\n    'AIRCRAFT',\n    'AISLE',\n    'ALASKA',\n    'ALIEN',\n    'ALLIGATOR',\n    'ALPHABETIZE',\n    'ALPS',\n    'AMAZON',\n    'AMBULANCE',\n    'AMERICA',\n    'ANCHOR',\n    'ANGEL',\n    'ANKLE',\n    'ANT',\n    'ANTARCTICA',\n    'ANTHEM',\n    'APATHY',\n    'APPLAUSE',\n    'APPLE',\n    'APPLESAUC',\n    'APPLICATION',\n    'APRON',\n    'ARCHAEOLOGIST',\n    'ARISTOCRAT',\n    'ARM',\n    'ARMADA',\n    'ARMOR',\n    'ARMY',\n    'ASH',\n    'ASLEEP',\n    'ASTRONAUT',\n    'ATHLETE',\n    'ATLANTIS',\n    'ATTIC',\n    'AUNT',\n    'AUSTRALIA',\n    'AVALANCHE',\n    'AVOCADO',\n    'AXE',\n    'AZTEC',\n    'BABY',\n    'BABY-SITTER',\n    'BACK',\n    'BACKBONE',\n    'BACON',\n    'BAG',\n    'BAGUETTE',\n    'BALD',\n    'BALL',\n    'BALLOON',\n    'BANANA',\n    'BAND',\n    'BANISTER',\n    'BANK',\n    'BAR',\n    'BARBECUE',\n    'BARK',\n    'BASEBALL',\n    'BASEBOARDS',\n    'BASKETBALL',\n    'BASS',\n    'BAT',\n    'BATH',\n    'BATTERY',\n    'BATTLE',\n    'BATTLESHIP',\n    'BAY',\n    'BEACH',\n    'BEAM',\n    'BEAN',\n    'BEANSTALK',\n    'BEAR',\n    'BEARD',\n    'BEAT',\n    'BED',\n    'BEDBUG',\n    'BEE',\n    'BEER',\n    'BEETHOVEN',\n    'BEIJING',\n    'BELL',\n    'BELT',\n    'BENCH',\n    'BERLIN',\n    'BERMUDA',\n    'BERRY',\n    'BIB',\n    'BICYCLE',\n    'BIG',\n    'BIG BANG',\n    'BIG BEN',\n    'BIKE',\n    'BILL',\n    'BILLBOARD',\n    'BIRD',\n    'BIRTHDAY',\n    'BISCUIT',\n    'BITE',\n    'BLACKSMITH',\n    'BLADE',\n    'BLANKET',\n    'BLEACH',\n    'BLIMP',\n    'BLIND',\n    'BLIZZARD',\n    'BLOCK',\n    'BLOSSOM',\n    'BLUEPRINT',\n    'BLUES',\n    'BLUNT',\n    'BLUR',\n    'BOA',\n    'BOARD',\n    'BOAT',\n    'BOB',\n    'BOBSLED',\n    'BODY',\n    'BOIL',\n    'BOLT',\n    'BOMB',\n    'BOND',\n    'BONNET',\n    'BONSAI',\n    'BOOK',\n    'BOOM',\n    'BOOT',\n    'BOOTH',\n    'BOSS',\n    'BOTTLE',\n    'BOW',\n    'BOWL',\n    'BOWLER',\n    'BOWTIE',\n    'BOX',\n    'BOXER',\n    'BOY',\n    'BRAIN',\n    'BRAINSTORM',\n    'BRAND',\n    'BRASS',\n    'BRAVE',\n    'BRAZIL',\n    'BREAD',\n    'BREAK',\n    'BRICK',\n    'BRIDE',\n    'BRIDGE',\n    'BROCCOLI',\n    'BROKEN',\n    'BROOM',\n    'BROTHER',\n    'BRUISE',\n    'BRUNETTE',\n    'BRUSH',\n    'BUBBLE',\n    'BUCK',\n    'BUCKET',\n    'BUDDY',\n    'BUFFALO',\n    'BUG',\n    'BUGLE',\n    'BULB',\n    'BUNK',\n    'BUNNY',\n    'BUS',\n    'BUTTER',\n    'BUTTERFLY',\n    'BUTTON',\n    'BUY',\n    'CABIN',\n    'CABLE',\n    'CAESAR',\n    'CAFETERIA',\n    'CAKE',\n    'CALCULATOR',\n    'CALF',\n    'CAMP',\n    'CAMPSITE',\n    'CAN',\n    'CANADA',\n    'CANDLE',\n    'CANDY',\n    'CANE',\n    'CAP',\n    'CAPE',\n    'CAPITAL',\n    'CAPITALISM',\n    'CAPTAIN',\n    'CAR',\n    'CARD',\n    'CARDBOARD',\n    'CARROT',\n    'CARTOGRAPHY',\n    'CASINO',\n    'CAST',\n    'CASTLE',\n    'CAT',\n    'CAVE',\n    'CD',\n    'CEILING',\n    'CELL',\n    'CENTAUR',\n    'CENTER',\n    'CENTURY',\n    'CHAIN',\n    'CHAIR',\n    'CHALK',\n    'CHAMPION',\n    'CHANGE',\n    'CHARGE',\n    'CHARGER',\n    'CHECK',\n    'CHEERLEADER',\n    'CHEESE',\n    'CHEF',\n    'CHERRY',\n    'CHESS',\n    'CHEST',\n    'CHEW',\n    'CHICK',\n    'CHICKEN',\n    'CHIME',\n    'CHINA',\n    'CHIP',\n    'CHOCOLATE',\n    'CHRISTMAS',\n    'CHURCH',\n    'CIRCLE',\n    'CIRCUS',\n    'CLAY',\n    'CLEOPATRA',\n    'CLIFF',\n    'CLOAK',\n    'CLOCK',\n    'CLOCKWORK',\n    'CLOUD',\n    'CLOWN',\n    'CLUB',\n    'CLUE',\n    'COACH',\n    'COAL',\n    'COAST',\n    'COASTER',\n    'CODE',\n    'COFFEE',\n    'COG',\n    'COLD',\n    'COLLAR',\n    'COLLEGE',\n    'COLUMBUS',\n    'COMB',\n    'COMET',\n    'COMFORT',\n    'COMIC',\n    'COMPOUND',\n    'COMPUTER',\n    'CONCERT',\n    'CONDUCTOR',\n    'CONE',\n    'CONSTRICTOR',\n    'CONTINUUM',\n    'CONTRACT',\n    'CONVERSATION',\n    'COOK',\n    'COOP',\n    'COPPER',\n    'CORD',\n    'CORDUROY',\n    'COT',\n    'COTTON',\n    'COUGH',\n    'COUNTRY',\n    'COURT',\n    'COVER',\n    'COW',\n    'COWBOY',\n    'CRAB',\n    'CRAFT',\n    'CRANE',\n    'CRASH',\n    'CRAYON',\n    'CREAM',\n    'CRICKET',\n    'CRISP',\n    'CRITICIZE',\n    'CROSS',\n    'CROW',\n    'CROWN',\n    'CRUISE',\n    'CRUMB',\n    'CRUSADER',\n    'CRUST',\n    'CRYSTAL',\n    'CUCKOO',\n    'CUFF',\n    'CURRY',\n    'CURTAIN',\n    'CUTICLE',\n    'CYCLE',\n    'CZAR',\n    'CZECH',\n    'DAD',\n    'DANCE',\n    'DART',\n    'DASH',\n    'DATE',\n    'DAWN',\n    'DAY',\n    'DEATH',\n    'DECK',\n    'DEEP',\n    'DEFECT',\n    'DEGREE',\n    'DELTA',\n    'DENT',\n    'DENTIST',\n    'DESK',\n    'DIAMOND',\n    'DICE',\n    'DICTIONARY',\n    'DIMPLE',\n    'DINOSAUR',\n    'DIRECTOR',\n    'DIRTY',\n    'DISEASE',\n    'DISK',\n    'DISMANTLE',\n    'DITCH',\n    'DIVER',\n    'DOCTOR',\n    'DOG',\n    'DOGHOUSE',\n    'DOLL',\n    'DOLLAR',\n    'DOMINOES',\n    'DOOR',\n    'DOT',\n    'DRAFT',\n    'DRAGON',\n    'DRAIN',\n    'DRAW',\n    'DRAWING',\n    'DREAM',\n    'DRESS',\n    'DRESSING',\n    'DRILL',\n    'DRINK',\n    'DRIP',\n    'DRIVER',\n    'DRONE',\n    'DROP',\n    'DRUM',\n    'DRUMS',\n    'DRYER',\n    'DUCK',\n    'DUMP',\n    'DUNK',\n    'DUST',\n    'DWARF',\n    'EAGLE',\n    'EAR',\n    'EARTH',\n    'EARTHQUAKE',\n    'EASTER',\n    'EAT',\n    'EBONY',\n    'EDEN',\n    'EGG',\n    'EGYPT',\n    'EINSTEIN',\n    'ELBOW',\n    'ELECTRICITY',\n    'ELEPHANT',\n    'ELEVATOR',\n    'ELF',\n    'ELM',\n    'EMBASSY',\n    'ENGINE',\n    'ENGLAND',\n    'ERGONOMIC',\n    'ESCALATOR',\n    'EUREKA',\n    'EUROPE',\n    'EVOLUTION',\n    'EXTENSION',\n    'EYE',\n    'EYEBROW',\n    'FACE',\n    'FAIR',\n    'FALL',\n    'FAN',\n    'FANCY',\n    'FARM',\n    'FAST',\n    'FEAST',\n    'FENCE',\n    'FEUDALISM',\n    'FEVER',\n    'FIDDLE',\n    'FIELD',\n    'FIGHTER',\n    'FIGMENT',\n    'FIGURE',\n    'FILE',\n    'FILM',\n    'FINGER',\n    'FIRE',\n    'FIRST',\n    'FISH',\n    'FISHING',\n    'FIX',\n    'FIZZ',\n    'FLAG',\n    'FLAGPOLE',\n    'FLANNEL',\n    'FLASHLIGHT',\n    'FLAT',\n    'FLOCK',\n    'FLOOD',\n    'FLOOR',\n    'FLOTSAM',\n    'FLOWER',\n    'FLU',\n    'FLUSH',\n    'FLUTE',\n    'FLUTTER',\n    'FLY',\n    'FOAM',\n    'FOG',\n    'FOIL',\n    'FOOT',\n    'FOOTBALL',\n    'FORCE',\n    'FOREHEAD',\n    'FOREST',\n    'FOREVER',\n    'FORK',\n    'FORTNIGHT',\n    'FRANCE',\n    'FRECKLE',\n    'FREIGHT',\n    'FRINGE',\n    'FROG',\n    'FROST',\n    'FROWN',\n    'FUEL',\n    'GALLOP',\n    'GAME',\n    'GANGSTER',\n    'GARBAGE',\n    'GARDEN',\n    'GAS',\n    'GASOLINE',\n    'GEAR',\n    'GEM',\n    'GENIE',\n    'GENIUS',\n    'GERMANY',\n    'GHOST',\n    'GIANT',\n    'GINGER',\n    'GINGERBREAD',\n    'GIRL',\n    'GLACIER',\n    'GLASS',\n    'GLASSES',\n    'GLOVE',\n    'GOAT',\n    'GOBLIN',\n    'GOLD',\n    'GOLDILOCKS',\n    'GOLF',\n    'GOODBYE',\n    'GOVERNOR',\n    'GRACE',\n    'GRANDPA',\n    'GRAPE',\n    'GRASS',\n    'GRATITUDE',\n    'GRAY',\n    'GREECE',\n    'GREEN',\n    'GREENHOUSE',\n    'GROOM',\n    'GROUND',\n    'GUITAR',\n    'GUM',\n    'GUMBALL',\n    'GYMNAST',\n    'HAIR',\n    'HALF',\n    'HALLOWEEN',\n    'HAM',\n    'HAMBURGER',\n    'HAMMER',\n    'HAND',\n    'HANDLE',\n    'HANDWRITING',\n    'HANG',\n    'HAPPY',\n    'HAT',\n    'HATCH',\n    'HAWAII',\n    'HAWK',\n    'HEAD',\n    'HEADACHE',\n    'HEART',\n    'HEDGE',\n    'HELICOPTER',\n    'HELMET',\n    'HEM',\n    'HERCULES',\n    'HIDE',\n    'HILL',\n    'HIMALAYAS',\n    'HIT',\n    'HOCKEY',\n    'HOLE',\n    'HOLLYWOOD',\n    'HOMER',\n    'HOMEWORK',\n    'HONEY',\n    'HONK',\n    'HOOD',\n    'HOOK',\n    'HOPSCOTCH',\n    'HORN',\n    'HORSE',\n    'HORSESHOE',\n    'HOSE',\n    'HOSPITAL',\n    'HOT',\n    'HOTEL',\n    'HOUSE',\n    'HOUSEBOAT',\n    'HUG',\n    'HUMIDIFIER',\n    'HUNGRY',\n    'HURDLE',\n    'HURT',\n    'HUT',\n    'ICE',\n    'ICE AGE',\n    'ICE CREAM',\n    'ICELAND',\n    'IGLOO',\n    'IMPLODE',\n    'INDIA',\n    'INK',\n    'INN',\n    'INQUISITION',\n    'INTERN',\n    'INTERNET',\n    'INVITATION',\n    'IRON',\n    'IRONIC',\n    'IVORY',\n    'IVY',\n    'JACK',\n    'JADE',\n    'JAIL',\n    'JAM',\n    'JAPAN',\n    'JEANS',\n    'JELLY',\n    'JELLYFISH',\n    'JET',\n    'JEWELER',\n    'JIG',\n    'JOAN OF ARC',\n    'JOCKEY',\n    'JOG',\n    'JOKER',\n    'JOURNAL',\n    'JUDGE',\n    'JUMP',\n    'JUMPER',\n    'JUPITER',\n    'KANGAROO',\n    'KETCHUP',\n    'KEY',\n    'KICK',\n    'KID',\n    'KILLER',\n    'KILOGRAM',\n    'KILT',\n    'KING',\n    'KING ARTHUR',\n    'KISS',\n    'KITCHEN',\n    'KITE',\n    'KIWI',\n    'KNEE',\n    'KNEEL',\n    'KNIFE',\n    'KNIGHT',\n    'KNOT',\n    'KOALA',\n    'KUNG FU',\n    'LAB',\n    'LACE',\n    'LADDER',\n    'LADYBUG',\n    'LAG',\n    'LANDFILL',\n    'LAP',\n    'LASER',\n    'LAUGH',\n    'LAUNDRY',\n    'LAW',\n    'LAWN',\n    'LAWNMOWER',\n    'LAWYER',\n    'LEAD',\n    'LEAF',\n    'LEAK',\n    'LEATHER',\n    'LEG',\n    'LEMON',\n    'LEMONADE',\n    'LEPRECHAUN',\n    'LETTER',\n    'LEVEL',\n    'LIFE',\n    'LIFESTYLE',\n    'LIGAMENT',\n    'LIGHT',\n    'LIGHTNING',\n    'LIGHTSABER',\n    'LIME',\n    'LIMOUSINE',\n    'LINE',\n    'LINK',\n    'LION',\n    'LIP',\n    'LITTER',\n    'LIZARD',\n    'LOCH NESS',\n    'LOCK',\n    'LOCUST',\n    'LOG',\n    'LOITERER',\n    'LOLLIPOP',\n    'LONDON',\n    'LOVE',\n    'LOVESEAT',\n    'LOYALTY',\n    'LUCK',\n    'LUMBERJACK',\n    'LUNCH',\n    'LUNCHBOX',\n    'LYRICS',\n    'MACHINE',\n    'MACHO',\n    'MAGAZINE',\n    'MAGICIAN',\n    'MAIL',\n    'MAILBOX',\n    'MAKEUP',\n    'MAMMOTH',\n    'MANICURE',\n    'MAP',\n    'MAPLE',\n    'MARACAS',\n    'MARATHON',\n    'MARBLE',\n    'MARCH',\n    'MARK',\n    'MARS',\n    'MASCOT',\n    'MASS',\n    'MAST',\n    'MATCH',\n    'MATCHSTICK',\n    'MATE',\n    'MATTRESS',\n    'MEDIC',\n    'MEMORY',\n    'MERCURY',\n    'MESS',\n    'METER',\n    'MEXICO',\n    'MICROSCOPE',\n    'MICROWAVE',\n    'MIDSUMMER',\n    'MILE',\n    'MILK',\n    'MILL',\n    'MILLIONAIRE',\n    'MINE',\n    'MINOTAUR',\n    'MINT',\n    'MINUTE',\n    'MIRROR',\n    'MISS',\n    'MISSILE',\n    'MISTAKE',\n    'MODEL',\n    'MODERN',\n    'MOHAWK',\n    'MOLD',\n    'MOLE',\n    'MOM',\n    'MONA LISA',\n    'MONDAY',\n    'MONEY',\n    'MONITOR',\n    'MONKEY',\n    'MONSTER',\n    'MOOCH',\n    'MOON',\n    'MOP',\n    'MOSCOW',\n    'MOSES',\n    'MOSQUITO',\n    'MOTH',\n    'MOTHER',\n    'MOTORCYCLE',\n    'MOUNT',\n    'MOUNTAIN',\n    'MOUNTIE',\n    'MOUSE',\n    'MOUTH',\n    'MOWER',\n    'MUD',\n    'MUG',\n    'MUMMY',\n    'MUSIC',\n    'MUSKETEER',\n    'MUSTARD',\n    'MUTE',\n    'NAIL',\n    'NAPOLEON',\n    'NATURE',\n    'NEEDLE',\n    'NEGOTIATE',\n    'NEIGHBOR',\n    'NERVE',\n    'NEST',\n    'NET',\n    'NEUTRON',\n    'NEW YORK',\n    'NEWTON',\n    'NIECE',\n    'NIGHT',\n    'NIGHTMARE',\n    'NINJA',\n    'NOAH',\n    'NOSE',\n    'NOTE',\n    'NOTRE DAME',\n    'NOVEL',\n    'NURSE',\n    'NUT',\n    'NYLON',\n    'OAR',\n    'OASIS',\n    'OBSERVATORY',\n    'OCTOPUS',\n    'OFFICE',\n    'OIL',\n    'OLD',\n    'OLIVE',\n    'OLYMPIAN',\n    'OLYMPUS',\n    'ONION',\n    'OPAQUE',\n    'OPENER',\n    'OPERA',\n    'ORANGE',\n    'ORBIT',\n    'ORGAN',\n    'ORGANIZE',\n    'OUTER',\n    'OUTSIDE',\n    'OVATION',\n    'OVERTURE',\n    'PACIFIC',\n    'PAD',\n    'PADDLE',\n    'PAGE',\n    'PAIL',\n    'PAINT',\n    'PAJAMAS',\n    'PALACE',\n    'PALM',\n    'PAN',\n    'PANTS',\n    'PAPER',\n    'PARACHUTE',\n    'PARADE',\n    'PARK',\n    'PARODY',\n    'PARROT',\n    'PART',\n    'PARTY',\n    'PASS',\n    'PASSWORD',\n    'PASTE',\n    'PASTRY',\n    'PATIENT',\n    'PAWN',\n    'PEA',\n    'PEACH',\n    'PEANUT',\n    'PEAR',\n    'PEARL',\n    'PEN',\n    'PENCIL',\n    'PENDULUM',\n    'PENGUIN',\n    'PENNY',\n    'PENTAGON',\n    'PEPPER',\n    'PERSONAL',\n    'PEW',\n    'PHILOSOPHER',\n    'PHOENIX',\n    'PHONE',\n    'PHOTOGRAPH',\n    'PIANO',\n    'PICNIC',\n    'PIE',\n    'PIG',\n    'PIGPEN',\n    'PILLOW',\n    'PILOT',\n    'PIN',\n    'PINCH',\n    'PINE',\n    'PING',\n    'PINWHEEL',\n    'PIPE',\n    'PIRATE',\n    'PISTOL',\n    'PIT',\n    'PITCH',\n    'PITCHER',\n    'PIZZA',\n    'PLAID',\n    'PLAN',\n    'PLANE',\n    'PLANK',\n    'PLASTIC',\n    'PLATE',\n    'PLATYPUS',\n    'PLAY',\n    'PLAYGROUND',\n    'PLOT',\n    'PLOW',\n    'PLUMBER',\n    'POCKET',\n    'POEM',\n    'POINT',\n    'POISON',\n    'POLE',\n    'POLICE',\n    'POLISH',\n    'POLO',\n    'POMP',\n    'PONG',\n    'POOL',\n    'POP',\n    'POPCORN',\n    'POPSICLE',\n    'POPULATION',\n    'PORT',\n    'PORTFOLIO',\n    'POSITIVE',\n    'POST',\n    'POTATO',\n    'POTTER',\n    'POUND',\n    'POWDER',\n    'PRESS',\n    'PRINCESS',\n    'PROCRASTINATE',\n    'PROTESTANT',\n    'PSYCHOLOGIST',\n    'PUBLISHER',\n    'PUMPKIN',\n    'PUNK',\n    'PUPIL',\n    'PUPPET',\n    'PUPPY',\n    'PURSE',\n    'PUSH',\n    'PUZZLE',\n    'PYRAMID',\n    'QUACK',\n    'QUARANTINE',\n    'QUARTER',\n    'QUEEN',\n    'QUICKSAND',\n    'QUIET',\n    'RABBIT',\n    'RACE',\n    'RACKET',\n    'RADIO',\n    'RAFT',\n    'RAG',\n    'RAIL',\n    'RAINBOW',\n    'RAINWATER',\n    'RAM',\n    'RANCH',\n    'RANDOM',\n    'RAT',\n    'RAY',\n    'RAZOR',\n    'RECORD',\n    'RECYCLE',\n    'RED',\n    'REGRET',\n    'REIMBURSEMENT',\n    'REINDEER',\n    'RETALIATE',\n    'REVOLUTION',\n    'RIB',\n    'RICE',\n    'RIDDLE',\n    'RIFLE',\n    'RIM',\n    'RING',\n    'RINK',\n    'RIP',\n    'RIVER',\n    'ROAD',\n    'ROBIN',\n    'ROBOT',\n    'ROCK',\n    'RODEO',\n    'ROLL',\n    'ROLLER',\n    'ROME',\n    'ROOM',\n    'ROOT',\n    'ROPE',\n    'ROSE',\n    'ROULETTE',\n    'ROUND',\n    'ROUNDABOUT',\n    'ROW',\n    'RUBBER',\n    'RULER',\n    'RUNG',\n    'RUNT',\n    'RUSSIA',\n    'RUST',\n    'RUT',\n    'SACK',\n    'SAD',\n    'SADDLE',\n    'SAFE',\n    'SAHARA',\n    'SAIL',\n    'SALAD',\n    'SALMON',\n    'SALOON',\n    'SALSA',\n    'SALT',\n    'SAND',\n    'SANDBOX',\n    'SANDCASTLE',\n    'SANDWICH',\n    'SANTA',\n    'SASH',\n    'SATELLITE',\n    'SATURN',\n    'SAW',\n    'SCALE',\n    'SCAR',\n    'SCARECROW',\n    'SCARED',\n    'SCHOOL',\n    'SCIENTIST',\n    'SCORPION',\n    'SCOUNDREL',\n    'SCRAMBLE',\n    'SCRATCH',\n    'SCREEN',\n    'SCROLL',\n    'SCUBA DIVER',\n    'SCUFF',\n    'SEAL',\n    'SEASHELL',\n    'SEASON',\n    'SECOND',\n    'SENTENCE',\n    'SEQUINS',\n    'SERVER',\n    'SET',\n    'SHADOW',\n    'SHAFT',\n    'SHAKESPEARE',\n    'SHALLOW',\n    'SHAMPOO',\n    'SHARK',\n    'SHED',\n    'SHEEP',\n    'SHEET',\n    'SHEETS',\n    'SHELL',\n    'SHERIFF',\n    'SHERLOCK',\n    'SHERWOOD',\n    'SHIP',\n    'SHIPWRECK',\n    'SHIRT',\n    'SHOE',\n    'SHOELACE',\n    'SHOOT',\n    'SHOP',\n    'SHORT',\n    'SHORTS',\n    'SHOT',\n    'SHOULDER',\n    'SHOWER',\n    'SHRINK',\n    'SICK',\n    'SIESTA',\n    'SIGN',\n    'SILHOUETTE',\n    'SILK',\n    'SINGER',\n    'SINK',\n    'SIP',\n    'SISTER',\n    'SKATE',\n    'SKATES',\n    'SKATING',\n    'SKI',\n    'SKULL',\n    'SKYSCRAPER',\n    'SLAM',\n    'SLED',\n    'SLEEP',\n    'SLING',\n    'SLIP',\n    'SLIPPER',\n    'SLOTH',\n    'SLOW',\n    'SLUG',\n    'SLUMP',\n    'SMELL',\n    'SMITH',\n    'SMOKE',\n    'SMOOTHIE',\n    'SMUGGLER',\n    'SNAKE',\n    'SNAP',\n    'SNEEZE',\n    'SNOW',\n    'SNOWMAN',\n    'SNUGGLE',\n    'SOAP',\n    'SOCK',\n    'SOLDIER',\n    'SONG',\n    'SOUL',\n    'SOUND',\n    'SOUP',\n    'SPACE',\n    'SPARE',\n    'SPEAKERS',\n    'SPELL',\n    'SPHINX',\n    'SPIDER',\n    'SPIKE',\n    'SPINE',\n    'SPIRIT',\n    'SPIT',\n    'SPONGE',\n    'SPOOL',\n    'SPOON',\n    'SPOT',\n    'SPRAY',\n    'SPRING',\n    'SPRINKLER',\n    'SPURS',\n    'SPY',\n    'SQUARE',\n    'SQUASH',\n    'SQUINT',\n    'SQUIRREL',\n    'ST.PATRICK',\n    'STABLE',\n    'STADIUM',\n    'STAFF',\n    'STAIRS',\n    'STAMP',\n    'STANDING',\n    'STAR',\n    'STATE',\n    'STEAM',\n    'STEEL',\n    'STEP',\n    'STETHOSCOPE',\n    'STICK',\n    'STICKER',\n    'STOCK',\n    'STOCKHOLDER',\n    'STOPLIGHT',\n    'STORM',\n    'STORY',\n    'STOUT',\n    'STOVE',\n    'STOWAWAY',\n    'STRAW',\n    'STREAM',\n    'STREAMLINE',\n    'STREET',\n    'STRIKE',\n    'STRING',\n    'STRIPE',\n    'STUDENT',\n    'SUB',\n    'SUGAR',\n    'SUIT',\n    'SUMO',\n    'SUN',\n    'SUNBURN',\n    'SUPERHERO',\n    'SUSHI',\n    'SWAMP',\n    'SWARM',\n    'SWEAT',\n    'SWEATER',\n    'SWIMMING',\n    'SWING',\n    'SWITCH',\n    'SWORD',\n    'TABLE',\n    'TABLET',\n    'TACHOMETER',\n    'TAG',\n    'TAIL',\n    'TALK',\n    'TANK',\n    'TAP',\n    'TASTE',\n    'TATTOO',\n    'TAXI',\n    'TEA',\n    'TEACHER',\n    'TEAM',\n    'TEAPOT',\n    'TEAR',\n    'TEENAGER',\n    'TELEPHONE',\n    'TELESCOPE',\n    'TELEVISION',\n    'TEMPLE',\n    'TEN',\n    'TENNIS',\n    'TEXAS',\n    'THEATER',\n    'THIEF',\n    'THINK',\n    'THRONE',\n    'THROUGH',\n    'THUMB',\n    'THUNDER',\n    'TICK',\n    'TIDE',\n    'TIE',\n    'TIGER',\n    'TIME',\n    'TIN',\n    'TINTING',\n    'TIP',\n    'TIPI',\n    'TIPTOE',\n    'TIPTOP',\n    'TIRED',\n    'TISSUE',\n    'TOAST',\n    'TOILET',\n    'TOKYO',\n    'TOOL',\n    'TOOTH',\n    'TOOTHBRUSH',\n    'TORCH',\n    'TORNADO',\n    'TOURNAMENT',\n    'TOWER',\n    'TRACK',\n    'TRACTOR',\n    'TRAIN',\n    'TRASH',\n    'TREASURE',\n    'TREE',\n    'TRIANGLE',\n    'TRICK',\n    'TRIP',\n    'TROLL',\n    'TRUCK',\n    'TRUNK',\n    'TUB',\n    'TUBA',\n    'TUBE',\n    'TUNNEL',\n    'TURKEY',\n    'TURTLE',\n    'TUTOR',\n    'TUTU',\n    'TUXEDO',\n    'TWANG',\n    'TWIG',\n    'TWITTERPATED',\n    'TYPE',\n    'UNDERTAKER',\n    'UNEMPLOYED',\n    'UNICORN',\n    'UNIVERSITY',\n    'UPGRADE',\n    'VACUUM',\n    'VALENTINE',\n    'VAMPIRE',\n    'VAN',\n    'VENUS',\n    'VEST',\n    'VET',\n    'VIKING',\n    'VIOLET',\n    'VIRUS',\n    'VISION',\n    'VOLCANO',\n    'VOLUME',\n    'WAG',\n    'WAGON',\n    'WAITRESS',\n    'WAKE',\n    'WALL',\n    'WALRUS',\n    'WAR',\n    'WASHER',\n    'WASHINGTON',\n    'WATCH',\n    'WATER',\n    'WATERMELON',\n    'WAVE',\n    'WAX',\n    'WEB',\n    'WEDDING',\n    'WEED',\n    'WELDER',\n    'WELL',\n    'WEREWOLF',\n    'WHALE',\n    'WHATEVER',\n    'WHEEL',\n    'WHEELCHAIR',\n    'WHIP',\n    'WHIPLASH',\n    'WHISK',\n    'WHISTLE',\n    'WHITE',\n    'WIG',\n    'WILL',\n    'WIND',\n    'WINDMILL',\n    'WINDOW',\n    'WING',\n    'WINTER',\n    'WISH',\n    'WITCH',\n    'WIZARD',\n    'WOLF',\n    'WONDERLAND',\n    'WOOD',\n    'WOOL',\n    'WORLD',\n    'WORM',\n    'WRISTWATCH',\n    'YARD',\n    'YARDSTICK',\n    'YELLOWSTONE',\n    'ZAMBONI',\n    'ZEN',\n    'ZERO',\n    'ZIPPER',\n    'ZOMBIE',\n    'ZONE',\n    'ZOO',\n];","import React, { Component } from 'react';\nimport shortid from 'shortid';\nimport _ from 'lodash';\nimport Game from './Game';\nimport { PubSub, handlePublishError } from './PubSub';\nimport { EVENT_JOIN, EVENT_PLAYER_LIST, EVENT_START } from '../constants/events';\nimport { wordList } from '../constants/words';\nimport '../styles/App.css';\n\nconst APP_NAME = \"codenames\";\nconst SEPARATOR = \":::\";\n\nconst TEAM_RED = \"Red\";\nconst TEAM_BLUE = \"Blue\";\n\nconst MIN_PLAYERS_REQUIRED = 2;\nconst TOTAL_CARDS = 25;\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n\n        this.uuid = shortid.generate().substring(0, 6);\n        this.state = {\n            isPlaying: false,\n            isDisabled: false,\n            isRoomCreator: false,\n            count: 1,\n            players: [],\n        };\n\n        this.handleInputChange = this.handleInputChange.bind(this);\n        this.onPressCreate = this.onPressCreate.bind(this);\n        this.onPressJoin = this.onPressJoin.bind(this);\n        this.onPressStartGame = this.onPressStartGame.bind(this);\n\n        this.lobbyChannel = null;\n        this.words = [];\n        this.playerMap = null;\n    }\n\n    subscribeToChannel = (channelName) => {\n        if (channelName != null) {\n            PubSub.subscribe(channelName, (msg) => {\n                const eventType = msg['name'];\n                const msgData = msg['data'];\n\n                if (eventType === EVENT_JOIN && this.state.isRoomCreator) {\n                    console.log(msgData.name + \" joined\");\n                    this.setState({\n                        count: this.state.count + 1\n                    });\n                    this.setState(prevState => {\n                        return {\n                            players: prevState.players.concat(msgData)\n                        };\n                    });\n\n                    // Sending updated player list to everyone\n                    PubSub.publish(\n                        channelName,\n                        EVENT_PLAYER_LIST,\n                        { playerList: this.state.players },\n                        handlePublishError\n                    );\n                }\n\n                else if (eventType === EVENT_PLAYER_LIST) {\n                    this.setState({ players: msgData.playerList });\n                }\n\n                else if (eventType === EVENT_START) {\n                    this.playerMap = msgData.teams;\n                    this.setState({\n                        isPlaying: true\n                    });\n                }\n            });\n        }\n    }\n\n    onPressCreate = () => {\n        if (!(this.state.roomId && this.state.name)) {\n            alert('Nickname and Room fields cannot be empty');\n            return;\n        }\n\n        this.lobbyChannel = APP_NAME + SEPARATOR + this.state.roomId;\n        this.setState({\n            isDisabled: true,\n            isRoomCreator: true\n        });\n\n        this.subscribeToChannel(this.lobbyChannel);\n        this.state.players.push({ uuid: this.uuid, name: this.state.name });\n        this.words = _.shuffle(wordList).slice(0, TOTAL_CARDS);\n        console.log('Room created');\n    }\n\n    onPressJoin = () => {\n        if (!(this.state.roomId && this.state.name)) {\n            alert('Nickname and Room fields cannot be empty');\n            return;\n        }\n\n        this.lobbyChannel = APP_NAME + SEPARATOR + this.state.roomId;\n        PubSub.publish(\n            this.lobbyChannel,\n            EVENT_JOIN,\n            {\n                uuid: this.uuid,\n                name: this.state.name\n            },\n            handlePublishError\n        );\n\n        this.subscribeToChannel(this.lobbyChannel);\n    }\n\n    onPressStartGame = () => {\n        let teams = {}\n        let teamFlag = true;\n        _.shuffle(this.state.players).forEach(p => {\n            p.team = (teamFlag ? TEAM_RED : TEAM_BLUE)\n            teams[p.uuid] = p;\n            teamFlag = !teamFlag;\n        });\n\n        PubSub.publish(\n            this.lobbyChannel,\n            EVENT_START,\n            {\n                teams: teams\n            },\n            handlePublishError\n        );\n    }\n\n    handleInputChange(e) {\n        const target = e.target;\n        const name = target.name;\n        const value = target.value;\n        this.setState({\n            [name]: value\n        });\n    }\n\n    render() {\n        return (\n            <div>\n                {\n                    !this.state.isPlaying &&\n                    <div className=\"d-md-flex h-md-100 align-items-center\">\n                        <div className=\"heading heading-left bg-primary-color\">\n                            <h1>code</h1>\n                        </div>\n                        <div className=\"heading heading-right\">\n                            <h1>names</h1>\n                        </div>\n                        <div className=\"col-md-6 p-0 h-md-100 align-items-center\" style={{ \"background\": \"#ebeeef\" }}>\n                            <div className=\"p-5\">\n                                <div className=\"login-box shadow\">\n                                    <div className=\"box-title\">\n                                        <span>Welcome!</span>\n                                    </div>\n                                    <div className=\"mt-3 p-4\">\n                                        <div className=\"form-group row\">\n                                            <label className=\"col-4 col-form-label\">Nickname</label>\n                                            <div className=\"col-8\">\n                                                <input name=\"name\" type=\"text\" className=\"form-control\" onChange={this.handleInputChange} />\n                                            </div>\n                                        </div>\n                                        <div className=\"form-group row\">\n                                            <label className=\"col-4 col-form-label\">Room name</label>\n                                            <div className=\"col-8\">\n                                                <input name=\"roomId\" type=\"text\" className=\"form-control\" onChange={this.handleInputChange} />\n                                            </div>\n                                        </div>\n                                        <div className=\"form-group row\">\n                                            <div className=\"col\">\n                                                <button type=\"button\" className=\"rounded-pill btn btn-outline-dark btn-block\" onClick={this.onPressCreate}>\n                                                    Create\n                                                </button>\n                                            </div>\n                                            <div className=\"col\">\n                                                <button type=\"button\" className=\"rounded-pill btn btn-outline-dark btn-block\" onClick={this.onPressJoin}>\n                                                    Join\n                                                </button>\n                                            </div>\n                                        </div>\n                                        {\n                                            this.state.isRoomCreator && this.state.count >= MIN_PLAYERS_REQUIRED &&\n                                            <div className=\"form-group row\">\n                                                <div className=\"col\">\n                                                    <button type=\"button\" className=\"rounded-pill btn btn-outline-success btn-block\" onClick={this.onPressStartGame}>\n                                                        Start Game!\n                                                    </button>\n                                                </div>\n                                            </div>\n                                        }\n                                    </div>\n                                </div>\n                                {\n                                    this.state.players.length > 0 &&\n                                    <div className=\"players-box shadow mt-5\">\n                                        <div className=\"box-title\">\n                                            <span>Secret Operatives</span>\n                                        </div>\n                                        <div className=\"p-4\">\n                                            {\n                                                this.state.players.map((p, index) => {\n                                                    const leftPlayer = p.name;\n                                                    const rightPlayer = this.state.players[index + 1] ? this.state.players[index + 1].name : '';\n                                                    return (\n                                                        index % 2 === 0\n                                                            ? <div className=\"d-flex\">\n                                                                <div className=\"w-50 text-center\">{leftPlayer}</div>\n                                                                <div className=\"w-50 text-center\">{rightPlayer}</div>\n                                                            </div>\n                                                            : ''\n                                                    );\n                                                })\n                                            }\n                                        </div>\n                                    </div>\n                                }\n                            </div>\n                        </div>\n                        <div className=\"col-md-6 p-0 bg-primary-color h-md-100\" />\n                    </div>\n                }\n                {\n                    this.state.isPlaying &&\n                    <Game gameChannel={this.lobbyChannel}\n                        playerMap={this.playerMap}\n                        myUuid={this.uuid}\n                        isRoomCreator={this.state.isRoomCreator}\n                        words={this.words} />\n                }\n            </div>\n        );\n    }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nrequire('./realtimeService');\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}